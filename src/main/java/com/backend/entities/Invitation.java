package com.backend.entities;

import com.backend.entities.IDs.AccountID;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.PersistenceCreator;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.mapping.Document;

import java.util.Date;

/**
 * Represents an Invitation entity
 */
@Document(collection = "InvitationsCollection")
public class Invitation {
    // The value is generated by Account.java
    @Transient
    @JsonIgnore
    private final AccountID senderIDObject;

    @Transient
    @JsonIgnore
    private final AccountID receiverIDObject;

    @Id
    private final String ID;

    private final String senderID;
    private final String receiverID;
    private final Date timestamp;

    // fields, getters
    public Invitation(AccountID senderIDObject, AccountID receiverIDObject, Date timestamp) {
        this.ID = senderIDObject.getID() + receiverIDObject.getID();

        this.senderIDObject = senderIDObject;
        this.senderID = senderIDObject.getID();

        this.receiverIDObject = receiverIDObject;
        this.receiverID = receiverIDObject.getID();

        this.timestamp = timestamp;
    }
    @PersistenceCreator
    public Invitation(String ID, String senderID, String receiverID, Date timestamp) {
        this.ID = ID;
        this.senderIDObject = new AccountID(senderID);
        this.receiverIDObject = new AccountID(receiverID);
        this.senderID = senderID;
        this.receiverID = receiverID;
        this.timestamp = timestamp;
    }

    public String getSenderID() {
        return this.senderID;
    }

    public String getReceiverID() {
        return this.receiverID;
    }

    public AccountID getSenderIDObject() {
        return this.senderIDObject;
    }

    public AccountID getReceiverIDObject() {
        return this.receiverIDObject;
    }

    public Date getTimestamp() {
        return this.timestamp;
    }
}
