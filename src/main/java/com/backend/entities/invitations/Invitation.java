package com.backend.entities.invitations;


import com.backend.entities.IDs.AccountID;
import org.springframework.data.annotation.PersistenceCreator;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.mapping.Document;

import java.sql.Timestamp;
import java.util.Date;

@Document(collection = "InvitationsCollection")
public class Invitation {
    // The value is generated by Account.java
    @Transient
    private final AccountID senderIDObject;

    // The value is generated by Account.java
    @Transient
    private final AccountID receiverIDObject;

    private final String senderID;
    private final String receiverID;


    private final Date timestamp;

    // fields, getters

    public Invitation(String senderID, String receiverID, Timestamp timestamp) {
        this.senderIDObject = new AccountID(senderID);
        this.receiverIDObject = new AccountID(receiverID);
        this.senderID = this.senderIDObject.toString();
        this.receiverID = this.receiverIDObject.toString();
        this.timestamp = timestamp;
    }
    @PersistenceCreator
    public Invitation(String senderID, String receiverID, Date timestamp) {
        this.senderIDObject = new AccountID(senderID);
        this.receiverIDObject = new AccountID(receiverID);
        this.senderID = this.senderIDObject.toString();
        this.receiverID = this.receiverIDObject.toString();
        this.timestamp = new Timestamp(timestamp.getTime());
    }

    public AccountID getSenderIDObject() {
        return this.senderIDObject;
    }

    public AccountID getReceiverIDObject() {
        return this.receiverIDObject;
    }

    public String getSenderID(){
        return this.senderID;
    }

    public String getReceiverID(){
        return this.receiverID;
    }

    public Timestamp getTimestamp() {
        if(timestamp == null) {
            return null;
        }
        return new Timestamp(timestamp.getTime());
    }
}
